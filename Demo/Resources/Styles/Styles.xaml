<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
	xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
	xmlns:dg="clr-namespace:Maui.DataGrid;assembly=Maui.DataGrid"
	xmlns:local="clr-namespace:UnitsConversionDemo">

	<Style TargetType="ActivityIndicator">
		<Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
	</Style>

	<Style TargetType="IndicatorView">
		<Setter Property="IndicatorColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}"/>
		<Setter Property="SelectedIndicatorColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray100}}"/>
	</Style>

	<Style TargetType="BoxView">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
	</Style>

	<Style TargetType="Button">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="BorderWidth" Value="0"/>
		<Setter Property="CornerRadius" Value="8"/>
		<Setter Property="Padding" Value="14,10"/>
		<Setter Property="MinimumHeightRequest" Value="44"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="PointerOver" />
                    <VisualState x:Name="Pressed">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Blue200Accent}, Dark={StaticResource Blue200Accent}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="CheckBox">
		<Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
		<Setter Property="MinimumHeightRequest" Value="44"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="DatePicker">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
		<Setter Property="BackgroundColor" Value="Transparent" />
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="MinimumHeightRequest" Value="44"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Editor">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
		<Setter Property="BackgroundColor" Value="Transparent" />
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14" />
		<Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
		<Setter Property="MinimumHeightRequest" Value="44"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Entry">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
		<Setter Property="BackgroundColor" Value="Transparent" />
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14" />
		<Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
		<Setter Property="MinimumHeightRequest" Value="44"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Border">
		<Setter Property="Stroke" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray500}}"/>
		<Setter Property="StrokeShape" Value="Rectangle"/>
		<Setter Property="StrokeThickness" Value="1"/>
		<Setter Property="Border.StrokeShape">
			<RoundRectangle CornerRadius="8"/>
		</Setter>
	</Style>
	<!--<Style TargetType="Border">
		<Setter Property="HasShadow" Value="False" />
		<Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray950}}" />
		<Setter Property="CornerRadius" Value="8" />
	</Style>-->

	<Style TargetType="ImageButton">
		<Setter Property="Opacity" Value="1" />
		<Setter Property="BorderColor" Value="Transparent"/>
		<Setter Property="BorderWidth" Value="0"/>
		<Setter Property="CornerRadius" Value="0"/>
		<Setter Property="MinimumHeightRequest" Value="44"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Opacity" Value="0.5" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="PointerOver" />
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Label">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
		<Setter Property="BackgroundColor" Value="Transparent" />
		<Setter Property="FontFamily" Value="OpenSansRegular" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Span">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
	</Style>

	<Style TargetType="Label" x:Key="Headline">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource MidnightBlue}, Dark={StaticResource White}}" />
		<Setter Property="FontSize" Value="32" />
		<Setter Property="HorizontalOptions" Value="Center" />
		<Setter Property="HorizontalTextAlignment" Value="Center" />
	</Style>

	<Style TargetType="Label" x:Key="SubHeadline">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource MidnightBlue}, Dark={StaticResource White}}" />
		<Setter Property="FontSize" Value="24" />
		<Setter Property="HorizontalOptions" Value="Center" />
		<Setter Property="HorizontalTextAlignment" Value="Center" />
	</Style>

	<Style TargetType="ListView">
		<Setter Property="SeparatorColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
		<Setter Property="RefreshControlColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
	</Style>

	<Style TargetType="Picker">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
		<Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
		<Setter Property="BackgroundColor" Value="Transparent" />
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="MinimumHeightRequest" Value="44"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
							<Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="ProgressBar">
		<Setter Property="ProgressColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="ProgressColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="RadioButton">
		<Setter Property="BackgroundColor" Value="Transparent"/>
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="MinimumHeightRequest" Value="44"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="RefreshView">
		<Setter Property="RefreshColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
	</Style>

	<Style TargetType="SearchBar">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
		<Setter Property="PlaceholderColor" Value="{StaticResource Gray500}" />
		<Setter Property="CancelButtonColor" Value="{StaticResource Gray500}" />
		<Setter Property="BackgroundColor" Value="Transparent" />
		<Setter Property="FontFamily" Value="OpenSansRegular" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="MinimumHeightRequest" Value="44"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
							<Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="SearchHandler">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
		<Setter Property="PlaceholderColor" Value="{StaticResource Gray500}" />
		<Setter Property="BackgroundColor" Value="Transparent" />
		<Setter Property="FontFamily" Value="OpenSansRegular" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
							<Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Shadow">
		<Setter Property="Radius" Value="15" />
		<Setter Property="Opacity" Value="0.5" />
		<Setter Property="Brush" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
		<Setter Property="Offset" Value="10,10" />
	</Style>

	<Style TargetType="Slider">
		<Setter Property="MinimumTrackColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
		<Setter Property="MaximumTrackColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
		<Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="MinimumTrackColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}"/>
							<Setter Property="MaximumTrackColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}"/>
							<Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="SwipeItem">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
	</Style>

	<Style TargetType="Switch">
		<Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
		<Setter Property="ThumbColor" Value="{StaticResource White}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
							<Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="On">
						<VisualState.Setters>
							<Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource Secondary}, Dark={StaticResource Gray200}}" />
							<Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Off">
						<VisualState.Setters>
							<Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray500}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="TimePicker">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
		<Setter Property="BackgroundColor" Value="Transparent"/>
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="MinimumHeightRequest" Value="44"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>
	
	
	<!-- Additions. -->
	<Style TargetType="Label" x:Key="SmallLabelBase">
		<Setter Property="VerticalTextAlignment" Value="Start"/>
		<Setter Property="HorizontalTextAlignment" Value="Start"/>
		<Setter Property="HorizontalOptions" Value="Start"/>
		<Setter Property="VerticalOptions" Value="Start"/>
	</Style>
	<Style TargetType="Label" Class="TitleLabel" BasedOn="{StaticResource SmallLabelBase}">
		<Setter Property="TextColor" Value="{StaticResource ControlTitleLight}"/>
		<Setter Property="FontSize" Value="14"/>
	</Style>

	<Style TargetType="VerticalStackLayout" Class="TitleVerticalStackStyle">
		<Setter Property="Spacing" Value="6"/>
	</Style>

	<Style TargetType="Page" ApplyToDerivedTypes="True">
		<Setter Property="Padding" Value="0"/>
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource OffBlack}}" />
	</Style>

	<Style TargetType="Shell" ApplyToDerivedTypes="True">
		<Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray100}, Dark={StaticResource OffBlack}}" />
		<Setter Property="Shell.ForegroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
		<Setter Property="Shell.TitleColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource SecondaryDarkText}}" />
		<Setter Property="Shell.DisabledColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray950}}" />
		<Setter Property="Shell.UnselectedColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray200}}" />
		<Setter Property="Shell.NavBarHasShadow" Value="False" />
		<Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
		<Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Light={StaticResource Magenta}, Dark={StaticResource White}}" />
		<Setter Property="Shell.TabBarTitleColor" Value="{AppThemeBinding Light={StaticResource Magenta}, Dark={StaticResource White}}" />
		<Setter Property="Shell.TabBarUnselectedColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
	</Style>

	<Style TargetType="NavigationPage">
		<Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource Black}}" />
		<Setter Property="BarTextColor" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource White}}" />
		<Setter Property="IconColor" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource White}}" />
	</Style>

	<!-- Control Styles -->
	<Style TargetType="Label" x:Key="LargeErrorMessageStyle">
		<Setter Property="TextColor" Value="{StaticResource ErrorColor}"/>
		<Setter Property="FontSize" Value="18"/>
		<Setter Property="FontAttributes" Value="Bold"/>
		<Setter Property="LineBreakMode" Value="WordWrap"/>
		<Setter Property="WidthRequest" Value="750"/>
		<Setter Property="HorizontalOptions" Value="Center"/>
	</Style>

	<!-- DataGrid -->
	<Style TargetType="ContentView" Class="DataGridContentViewStyle" >
		<Setter Property="HorizontalOptions" Value="Start"/>
		<Setter Property="VerticalOptions" Value="Fill"/>
		<Setter Property="Padding" Value="6,0"/>
	</Style>
	<Style TargetType="Label" Class="DataGridLabelStyle">
		<Setter Property="HorizontalOptions" Value="Start"/>
		<Setter Property="VerticalOptions" Value="Center"/>
	</Style>

	<Style TargetType="Label" x:Key="DataGridTitle">
		<Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
		<Setter Property="FontSize" Value="18" />
		<Setter Property="HorizontalOptions" Value="Center" />
		<Setter Property="VerticalOptions" Value="Center" />
		<Setter Property="LineBreakMode" Value="TailTruncation" />
	</Style>

	<DataTemplate x:Key="DataGridDefaultCellTempate" x:DataType="x:String">
		<ContentView StyleClass="DataGridContentViewStyle">
			<Label Text="{Binding}" StyleClass="DataGridLabelStyle"/>
		</ContentView>
	</DataTemplate>

	<dg:PaletteCollection x:Key="DataGridColorPaletteLight">
		<Color>#F2F2F2</Color>
		<Color>White</Color>
	</dg:PaletteCollection>

    <dg:PaletteCollection x:Key="DataGridColorPaletteDark">
        <Color>#404040</Color>
        <Color>#292929</Color>
    </dg:PaletteCollection>

    <!-- Page Styles -->
	<Style TargetType="Label" Class="Title">
		<Setter Property="FontSize" Value="22"/>
		<Setter Property="FontFamily" Value="OpenSans-Semibold"/>
		<Setter Property="FontAttributes" Value="Bold" />
		<Setter Property="HorizontalOptions" Value="Center" />
	</Style>

	<Style TargetType="Grid" Class="PageGridStyle">
		<Setter Property="RowSpacing" Value="10"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="RowDefinitions" Value="Auto,*"/>
	</Style>

	<Style TargetType="HorizontalStackLayout" x:Key="ButtonRowStyleBase">
		<Setter Property="Spacing" Value="20"/>
		<Setter Property="Padding" Value="0"/>
	</Style>

	<Style TargetType="HorizontalStackLayout" BasedOn="{StaticResource ButtonRowStyleBase}" Class="TopButtonRowStyle"/>

	<Style TargetType="HorizontalStackLayout"  BasedOn="{StaticResource ButtonRowStyleBase}" Class="BottomButtonRowStyle">
		<Setter Property="Margin" Value="0,8,0,0"/>
		<Setter Property="VerticalOptions" Value="End"/>
		<Setter Property="HorizontalOptions" Value="End"/>
	</Style>

	<Style TargetType="Button" Class="StandardSizeButtonStyle">
		<Setter Property="HeightRequest" Value="38"/>
		<Setter Property="WidthRequest" Value="100"/>
		<Setter Property="VerticalOptions" Value="Center"/>
	</Style>

	<Style TargetType="Button" Class="WideButtonStyle">
		<Setter Property="HeightRequest" Value="38"/>
		<Setter Property="WidthRequest" Value="140"/>
		<Setter Property="VerticalOptions" Value="Center"/>
	</Style>

	<!-- Flyout Buttons -->
	<FontImage 
		x:Key="TabOneInactive"
		FontFamily="FontAwesome"
		Color="{StaticResource Inactive}"
		Glyph="{x:Static local:IconFont.Vial}"/>
	<FontImage
		x:Key="TabOneActive"
		FontFamily="FontAwesome"
		Color="{StaticResource Active}"
		Glyph="{x:Static local:IconFont.Vial}"/>
	<FontImage
		x:Key="TabTwoInactive"
		FontFamily="FontAwesome"
		Color="{StaticResource Inactive}"
		Glyph="{x:Static local:IconFont.Pen}"/>
	<FontImage
		x:Key="TabTwoActive"
		FontFamily="FontAwesome"
		Color="{StaticResource Active}"
		Glyph="{x:Static local:IconFont.Pen}"/>

	<Style TargetType="FlyoutItem" x:Key="ParseFlyout">
		<Style.Triggers>
			<Trigger TargetType="FlyoutItem" Property="IsChecked" Value="False">
				<Setter Property="FlyoutIcon" Value="{StaticResource TabOneInactive}"/>
			</Trigger>
			<Trigger TargetType="FlyoutItem" Property="IsChecked" Value="True">
				<Setter Property="FlyoutIcon" Value="{StaticResource TabOneActive}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="FlyoutItem" x:Key="UnitsGroupsFlyout">
		<Style.Triggers>
			<Trigger TargetType="FlyoutItem" Property="IsChecked" Value="False">
				<Setter Property="FlyoutIcon" Value="{StaticResource TabTwoInactive}"/>
			</Trigger>
			<Trigger TargetType="FlyoutItem" Property="IsChecked" Value="True">
				<Setter Property="FlyoutIcon" Value="{StaticResource TabTwoActive}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Change the color of the text. -->
	<Style x:Key="FloutItemStyle" TargetType="Grid">
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter TargetName="_flyoutLabel" Property="Label.TextColor" Value="{StaticResource Inactive}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Selected">
						<VisualState.Setters>
							<Setter TargetName="_flyoutLabel" Property="Label.TextColor" Value="{StaticResource Active}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="VerticalStackLayout" Class="VerticalLayoutStyle">
		<Setter Property="Spacing" Value="10"/>
		<Setter Property="Padding" Value="0,0"/>
	</Style>

	<Style TargetType="VerticalStackLayout" Class="TitleVerticalStackStyle">
		<Setter Property="Spacing" Value="6"/>
	</Style>

	<Style TargetType="Label" Class="InvalidLabelStyle" BasedOn="{StaticResource SmallLabelBase}">
		<Setter Property="TextColor" Value="{StaticResource ErrorColor}"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>

	<Style TargetType="Grid" Class="FileBrowsingGridStyle">
		<Setter Property="RowDefinitions" Value="27,Auto,16"/>
		<Setter Property="RowSpacing" Value="0"/>
		<Setter Property="ColumnDefinitions" Value="*,100"/>
		<Setter Property="ColumnSpacing" Value="8"/>
	</Style>

	<!-- Popups. -->
	<Style TargetType="toolkit:Popup" ApplyToDerivedTypes="True">
		<Setter Property="Color" Value="Transparent"/>
	</Style>
	<Style TargetType="Border" Class="PopupFrameStyle">
		<Setter Property="Background" Value="{AppThemeBinding Light={DynamicResource LightGray}, Dark={DynamicResource Gray900}}"/>
		<Setter Property="Padding" Value="20"/>
		<Setter Property="Border.StrokeShape">
			<RoundRectangle CornerRadius="20"/>
		</Setter>
	</Style>
	
</ResourceDictionary>